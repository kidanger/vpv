kind: pipeline
type: docker
name: debian-stable

steps:
- name: build
  image: debian:stable
  commands:
  - export DEBIAN_FRONTEND=noninteractive
  - apt-get update
  - apt-get install -qq build-essential cmake
  - apt-get install -qq libegl1-mesa-dev libgles2-mesa-dev
  - apt-get install -qq libsdl2-dev libpng-dev libtiff-dev libjpeg-dev
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Debug
  - make
  - ctest
  - make install

---
kind: pipeline
type: docker
name: debian-testing

steps:
- name: build
  image: debian:testing
  commands:
  - export DEBIAN_FRONTEND=noninteractive
  - apt-get update
  - apt-get install -qq build-essential cmake
  - apt-get install -qq libegl1-mesa-dev libgles2-mesa-dev
  - apt-get install -qq libsdl2-dev libpng-dev libtiff-dev libjpeg-dev
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Debug
  - make
  - ctest
  - make install

---
kind: pipeline
type: docker
name: ubuntu-bionic

steps:
- name: build
  image: ubuntu:bionic
  commands:
  - apt-get update
  - apt-get install -qq build-essential wget
    # install a custom version of cmake because bionic is old
  - wget https://github.com/Kitware/CMake/releases/download/v3.13.5/cmake-3.13.5-Linux-x86_64.tar.gz -O cmake.tar.gz
  - tar xf cmake.tar.gz --strip 1 -C /usr
  - apt-get install -qq libsdl2-dev libpng-dev libtiff-dev libjpeg-dev
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Debug
  - make
  - ctest
  - make install

---
kind: pipeline
type: docker
name: ubuntu-latest

steps:
- name: build
  image: ubuntu:latest
  commands:
  - export DEBIAN_FRONTEND=noninteractive
  - apt-get update
  - apt-get install -qq build-essential cmake
  - apt-get install -qq libegl1-mesa-dev libgles2-mesa-dev
  - apt-get install -qq libsdl2-dev libpng-dev libtiff-dev libjpeg-dev
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Debug
  - make
  - ctest
  - make install

---
kind: pipeline
type: docker
name: ubuntu-rolling

steps:
- name: build
  image: ubuntu:rolling
  commands:
  - export DEBIAN_FRONTEND=noninteractive
  - apt-get update
  - apt-get install -qq build-essential cmake
  - apt-get install -qq libegl1-mesa-dev libgles2-mesa-dev
  - apt-get install -qq libsdl2-dev libpng-dev libtiff-dev libjpeg-dev
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Debug
  - make
  - ctest
  - make install

---
kind: pipeline
type: docker
name: ubuntu-devel

steps:
- name: build
  image: ubuntu:devel
  commands:
  - export DEBIAN_FRONTEND=noninteractive
  - apt-get update
  - apt-get install -qq build-essential cmake
  - apt-get install -qq libegl1-mesa-dev libgles2-mesa-dev
  - apt-get install -qq libsdl2-dev libpng-dev libtiff-dev libjpeg-dev
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Debug
  - make
  - ctest
  - make install

---
kind: pipeline
type: docker
name: archlinux

steps:
- name: build
  image: archlinux
  commands:
  - pacman -Syu --noconfirm
  - pacman -S --noconfirm make gcc cmake sdl2 libpng libtiff libjpeg
  - pacman -S --noconfirm extra/cargo
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Debug
  - make
  - ctest
  - make install

---
kind: pipeline
type: docker
name: fedora-32

steps:
- name: build
  image: fedora:32
  commands:
  - dnf install -y make cmake gcc-c++ SDL2-devel libpng-devel libtiff-devel libjpeg-turbo-devel mesa-libGL-devel
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Debug
  - make
  - ctest
  - make install

---
kind: pipeline
type: docker
name: fedora-33

steps:
- name: build
  image: fedora:33
  commands:
  - dnf install -y make cmake gcc-c++ SDL2-devel libpng-devel libtiff-devel libjpeg-turbo-devel mesa-libGL-devel
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Debug
  - make
  - ctest
  - make install

---
kind: pipeline
type: docker
name: archlinux-aur

steps:
- name: build
  image: oblique/archlinux-yay
  commands:
  - sudo -u aur yay --noconfirm -Sy vpv
---

kind: pipeline
type: docker
name: ubuntu-bionic-mkappimage

steps:
- name: mkappimage
  image: ubuntu:bionic
  commands:
  - apt-get update
  - apt-get install -qq software-properties-common
  - add-apt-repository -y ppa:ubuntugis/ppa
  - add-apt-repository -y ppa:cybermax-dexter/sdl2-backport
  - apt-get update
  - apt-get install -qq build-essential wget
    # install a custom version of cmake because bionic is old
  - wget https://github.com/Kitware/CMake/releases/download/v3.13.5/cmake-3.13.5-Linux-x86_64.tar.gz -O cmake.tar.gz
  - tar xf cmake.tar.gz --strip 1 -C /usr
  - apt-get install -qq libsdl2-dev libpng-dev libtiff-dev libjpeg-dev libgdal-dev
  #- apt-get remove -qq libsdl2-dev  # remove it but keep the dependencies
  #- wget https://www.libsdl.org/release/SDL2-2.0.12.tar.gz
  #- tar xvf SDL2-*.tar.gz
  #- cd SDL2-*/
  #- ./configure
  #- make -j6
  #- make install
  #- cd ..
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DUSE_GDAL=ON -DCMAKE_BUILD_TYPE=Release
  - make -j6
  - make install DESTDIR=AppDir
  - wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
  - chmod +x linuxdeploy-x86_64.AppImage
  - ./linuxdeploy-x86_64.AppImage --appimage-extract-and-run --appdir AppDir/ --executable AppDir/usr/bin/vpv --icon-file=../misc/icon.svg --output appimage
- name: publish
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    draft: true
    files: build/vpv-*.AppImage
  when:
    event: tag

